<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="styleManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>